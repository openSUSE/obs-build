#
# LXC specific functions
#
################################################################
#
# Copyright (c) 1995-2014 SUSE Linux Products GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING); if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
################################################################

lxc_get_id() {
    LXCID="obsbuild:${BUILD_ROOT##*/}"
}

vm_verify_options_lxc() {
    VM_IMAGE=
    VM_SWAP=
}

vm_startup_lxc() {
    lxc_get_id
    LXCDIR="`lxc-config lxc.lxcpath`/$LXCID"
    LXCROOTFS="$LXCDIR/rootfs"
    LXCHOOK="$LXCDIR/pre-mount.hook"
    LXCCONF="$BUILD_ROOT/.build.lxc.conf"
    rm -f "$LXCCONF"
    cat $BUILD_DIR/lxc.conf > "$LXCCONF"
    cat >> "$LXCCONF" <<-EOF
	lxc.rootfs = $LXCROOTFS
	lxc.hook.pre-mount = $LXCHOOK
	EOF
    # XXX: do this always instead of leaking the hosts' one?
    echo "rootfs / rootfs rw 0 0" > $BUILD_ROOT/etc/mtab
    lxc-destroy -n "$LXCID" >/dev/null 2>&1 || true
    mkdir -p "$LXCROOTFS"
    cat > "$LXCHOOK" <<-EOF
	#!/bin/sh
	mount --bind "$BUILD_ROOT" "$LXCROOTFS"
	EOF
    chmod a+x "$LXCHOOK"
    lxc-create -n "$LXCID" -f "$LXCCONF" || cleanup_and_exit 1
    lxc-start -n "$LXCID" "$vm_init_script"
    BUILDSTATUS="$?"
    test "$BUILDSTATUS" != 255 || BUILDSTATUS=3
    cleanup_and_exit "$BUILDSTATUS"
}

vm_kill_lxc() {
    lxc_get_id
    lxc-stop -n "$LXCID" || true
}

vm_fixup_lxc() {
    :
}

vm_attach_root_lxc() {
    :
}

vm_attach_swap_lxc() {
    :
}

vm_detach_root_lxc() {
    :
}

vm_detach_swap_lxc() {
    :
}

vm_cleanup_lxc() {
    if test $$ -ne 1 && test $$ -ne 2 ; then
        lxc_get_id
        lxc-destroy -n "$LXCID"
    fi
}

