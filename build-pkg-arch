#
# Arch specific functions.
#
# (C) 2014 SUSE, Inc
#

pkg_initdb_arch() {
    mkdir -p $BUILD_ROOT/var/lib/pacman/sync
    touch $BUILD_ROOT/var/lib/pacman/sync/core.db
    touch $BUILD_ROOT/var/lib/pacman/sync/extra.db
    touch $BUILD_ROOT/var/lib/pacman/sync/community.db
}

pkg_get_installed_arch() {
    :
}

pkg_set_packageid_arch() {
    PKGID=`readlink $BUILD_ROOT/.init_b_cache/rpms/$PKG.$PSUF`
    PKGID="${PKGID##*/}"
    PKGID="${PKGID/%.pkg.tar.?z/.arch}"
    PKGID="${PKGID%.arch} arch"
}

pkg_erase_arch() {
    cleanup_and_exit 1
}

pkg_verify_installed_arch() {
    return 1
}

pkg_cumulate_arch() {
    return 1
}

pkg_install_arch() {
    # -d -d disables deps checking
    ( chroot $BUILD_ROOT pacman -U --force -d -d --noconfirm /.init_b_cache/$PKG.$PSUF 2>&1 || touch $BUILD_ROOT/exit ) | \
	perl -ne '$|=1;/^(warning: could not get filesystem information for |loading packages|looking for inter-conflicts|Targets |Total Installed Size: |Net Upgrade Size: |Proceed with installation|checking package integrity|loading package files|checking for file conflicts|checking keyring|Packages \(\d+\):|:: Proceed with installation|checking available disk space|installing |upgrading |warning:.*is up to date -- reinstalling|Optional dependencies for|    )/||/^$/||print'
}

pkg_finalize_arch() {
    :
}

pkg_preinstall_arch() {
    $TAR -f "$BUILD_ROOT/.init_b_cache/rpms/$PKG.arch"
    if test -f .INSTALL ; then
	cat .INSTALL > "$BUILD_ROOT/.init_b_cache/scripts/$PKG.post"
	echo 'type post_install >/dev/null 2>&1 && post_install' >> "$BUILD_ROOT/.init_b_cache/scripts/$PKG.post"
    fi
    rm -f .PKGINFO .INSTALL
}

pkg_runscripts_arch() {
    if test -e "$BUILD_ROOT/.init_b_cache/scripts/$PKG.post" ; then
	echo "running $PKG postinstall script"
	chroot $BUILD_ROOT "/.init_b_cache/scripts/$PKG.post" < /dev/null
	rm -f "$BUILD_ROOT/.init_b_cache/scripts/$PKG.post"
    fi
}
